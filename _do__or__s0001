--https://raw.githubusercontent.com/x89629689234/x111/main/_doors0001

local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/shlexware/Orion/main/source")))()
    local Window =
        OrionLib:MakeWindow(
        {
            IntroText = "D4rk Hub - DOORS",
            Name = "D4rk Hub - DOORS v4",
            HidePremium = false,
            SaveConfig = true,
            ConfigFolder = "D4RKHUB_DOORS"
        }
    )
    if game.PlaceId == 6516141723 then
        OrionLib:MakeNotification(
            {
                Name = "D4rk Hub",
                Content = "Please execute when in game, not in lobby.",
                Time = 2
            }
        )
    end
    local VisualsTab =
        Window:MakeTab(
        {
            Name = "ESP",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )
    local CF = CFrame.new
    local LatestRoom = game:GetService("ReplicatedStorage").GameData.LatestRoom
    local ChaseStart = game:GetService("ReplicatedStorage").GameData.ChaseStart
    
    local KeyChams = {}
    VisualsTab:AddToggle(
        {
            Name = "Key ESP",
            Default = false,
            Flag = "KeyToggle",
            Save = false,
            Callback = function(Value)
                for i, v in pairs(KeyChams) do
                    v.Enabled = Value
                end
            end
        }
    )
    
    local function ApplyKeyChams(inst)
        wait()
        local Cham = Instance.new("Highlight")
        Cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        Cham.FillColor = Color3.new(0.980392, 0.670588, 0)
        Cham.FillTransparency = 0.5
        Cham.OutlineColor = Color3.new(0.792156, 0.792156, 0.792156)
        Cham.Parent = game:GetService("CoreGui")
        Cham.Adornee = inst
        Cham.Enabled = OrionLib.Flags["KeyToggle"].Value
        Cham.RobloxLocked = true
        return Cham
    end
    
    local KeyCoroutine =
        coroutine.create(
        function()
            workspace.CurrentRooms.DescendantAdded:Connect(
                function(inst)
                    if inst.Name == "KeyObtain" then
                        table.insert(KeyChams, ApplyKeyChams(inst))
                    end
                end
            )
        end
    )
    for i, v in ipairs(workspace:GetDescendants()) do
        if v.Name == "KeyObtain" then
            table.insert(KeyChams, ApplyKeyChams(v))
        end
    end
    coroutine.resume(KeyCoroutine)
    
    local BookChams = {}
    VisualsTab:AddToggle(
        {
            Name = "Book ESP",
            Default = false,
            Flag = "BookToggle",
            Save = false,
            Callback = function(Value)
                for i, v in pairs(BookChams) do
                    v.Enabled = Value
                end
            end
        }
    )
    
    local FigureChams = {}
    VisualsTab:AddToggle(
        {
            Name = "Figure ESP",
            Default = false,
            Flag = "FigureToggle",
            Save = false,
            Callback = function(Value)
                for i, v in pairs(FigureChams) do
                    v.Enabled = Value
                end
            end
        }
    )
    
    local function ApplyBookChams(inst)
        if
            inst:IsDescendantOf(game:GetService("Workspace").CurrentRooms:FindFirstChild("50")) and
                game:GetService("ReplicatedStorage").GameData.LatestRoom.Value == 50
         then
            wait()
            local Cham = Instance.new("Highlight")
            Cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            Cham.FillColor = Color3.new(0, 1, 0.749019)
            Cham.FillTransparency = 0.5
            Cham.OutlineColor = Color3.new(0.792156, 0.792156, 0.792156)
            Cham.Parent = game:GetService("CoreGui")
            Cham.Enabled = OrionLib.Flags["BookToggle"].Value
            Cham.Adornee = inst
            Cham.RobloxLocked = true
            return Cham
        end
    end
    
    local function ApplyEntityChams(inst)
        wait()
        local Cham = Instance.new("Highlight")
        Cham.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        Cham.FillColor = Color3.new(1, 0, 0)
        Cham.FillTransparency = 0.5
        Cham.OutlineColor = Color3.new(0.792156, 0.792156, 0.792156)
        Cham.Parent = game:GetService("CoreGui")
        Cham.Enabled = OrionLib.Flags["FigureToggle"].Value
        Cham.Adornee = inst
        Cham.RobloxLocked = true
        return Cham
    end
    
    local BookCoroutine =
        coroutine.create(
        function()
            task.wait(1)
            for i, v in pairs(game:GetService("Workspace").CurrentRooms["50"].Assets:GetDescendants()) do
                if v.Name == "LiveHintBook" then
                    table.insert(BookChams, ApplyBookChams(v))
                end
            end
        end
    )
    local EntityCoroutine =
        coroutine.create(
        function()
            local Entity = game:GetService("Workspace").CurrentRooms["50"].FigureSetup:WaitForChild("FigureRagdoll", 5)
            Entity:WaitForChild("Torso", 2.5)
            table.insert(FigureChams, ApplyEntityChams(Entity))
        end
    )
    
    local GameTab =
        Window:MakeTab(
        {
            Name = "Mods",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )
    local CharTab =
        Window:MakeTab(
        {
            Name = "Player",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )
    
    local TargetWalkspeed
    CharTab:AddSlider(
        {
            Name = "WalkSpeed",
            Min = 0,
            Max = 50,
            Default = 5,
            Color = Color3.fromRGB(255, 255, 255),
            Increment = 1,
            Callback = function(Value)
                TargetWalkspeed = Value
            end
        }
    )
    
    local pcl = Instance.new("SpotLight")
    pcl.Brightness = 1
    pcl.Face = Enum.NormalId.Front
    pcl.Range = 90
    pcl.Parent = game.Players.LocalPlayer.Character.Head
    pcl.Enabled = false
    
    CharTab:AddToggle(
        {
            Name = "HeadLight",
            Default = false,
            Callback = function(Value)
                pcl.Enabled = Value
            end
        }
    )
    
    GameTab:AddToggle(
        {
            Name = "No Killing Arms in Seek Chase",
            Default = false,
            Flag = "NoSeek",
            Save = false
        }
    )
    GameTab:AddButton(
        {
            Name = "Remove Dead-End Doors",
            Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/floppa1511/amogus/main/RemoveFakeDoors", true))()
            end
        }
    )
    
    GameTab:AddToggle(
        {
            Name = "Remove Lever Doors",
            Default = false,
            Flag = "NoLever",
            Save = false
        }
    )
    GameTab:AddToggle(
        {
            Name = "Remove Vent Gates",
            Default = false,
            Flag = "NoVentGates",
            Save = false
        }
    )
    
    GameTab:AddButton(
        {
            Name = "Remove Library Door",
            Callback = function()
                game:GetService("Workspace").CurrentRooms:FindFirstChild("50").Door.Door:remove()
            end
        }
    )
    
    GameTab:AddButton(
        {
            Name = "Remove Working Doors[Will Destroy Room Generation]",
            Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/floppa1511/amogus/main/RemoveDoors", true))()
            end
        }
    )
    GameTab:AddButton(
        {
            Name = "Remove Walls",
            Callback = function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/floppa1511/amogus/main/RemoveWalls", true))()
            end
        }
    )
    GameTab:AddToggle(
        {
            Name = "No E-Wait",
            Default = false,
            Flag = "InstantToggle",
            Save = false
        }
    )
    GameTab:AddButton(
        {
            Name = "Skip Current Room",
            Callback = function()
                pcall(
                    function()
                        local HasKey = false
                        local CurrentDoor =
                            workspace.CurrentRooms[tostring(game:GetService("ReplicatedStorage").GameData.LatestRoom.Value)]:WaitForChild(
                            "Door"
                        )
                        for i, v in ipairs(CurrentDoor.Parent:GetDescendants()) do
                            if v.Name == "KeyObtain" then
                                HasKey = v
                            end
                        end
                        if HasKey then
                            game.Players.LocalPlayer.Character:PivotTo(CF(HasKey.Hitbox.Position))
                            wait(0.3)
                            fireproximityprompt(HasKey.ModulePrompt, 0)
                            game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
                            wait(0.3)
                            fireproximityprompt(CurrentDoor.Lock.UnlockPrompt, 0)
                        end
                        if LatestRoom == 50 then
                            CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom + 1)]:WaitForChild("Door")
                        end
                        game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
                        wait(0.3)
                        CurrentDoor.ClientOpen:FireServer()
                    end
                )
            end
        }
    )
    
    GameTab:AddToggle(
        {
            Name = "Auto-Complete",
            Default = false,
            Save = false,
            Flag = "AutoSkip"
        }
    )
    
    local AutoSkipCoro =
        coroutine.create(
        function()
            while true do
                task.wait()
                pcall(
                    function()
                        if
                            OrionLib.Flags["AutoSkip"].Value == true and
                                game:GetService("ReplicatedStorage").GameData.LatestRoom.Value < 100
                         then
                            local HasKey = false
                            local LatestRoom = game:GetService("ReplicatedStorage").GameData.LatestRoom.Value
                            local CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom)]:WaitForChild("Door")
                            for i, v in ipairs(CurrentDoor.Parent:GetDescendants()) do
                                if v.Name == "KeyObtain" then
                                    HasKey = v
                                end
                            end
                            if HasKey then
                                game.Players.LocalPlayer.Character:PivotTo(CF(HasKey.Hitbox.Position))
                                task.wait(0.3)
                                fireproximityprompt(HasKey.ModulePrompt, 0)
                                game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
                                task.wait(0.3)
                                fireproximityprompt(CurrentDoor.Lock.UnlockPrompt, 0)
                            end
                            if LatestRoom == 50 then
                                CurrentDoor = workspace.CurrentRooms[tostring(LatestRoom + 1)]:WaitForChild("Door")
                            end
                            game.Players.LocalPlayer.Character:PivotTo(CF(CurrentDoor.Door.Position))
                            task.wait(0.3)
                            CurrentDoor.ClientOpen:FireServer()
                        end
                    end
                )
            end
        end
    )
    coroutine.resume(AutoSkipCoro)
    
    GameTab:AddButton(
        {
            Name = "Anti-Jumpscares",
            Callback = function()
                pcall(
                    function()
                        game:GetService("ReplicatedStorage").Bricks.Jumpscare:Destroy()
                    end
                )
            end
        }
    )
    GameTab:AddToggle(
        {
            Name = "Auto-Avoid Rush/Ambush",
            Default = false,
            Flag = "AvoidRushToggle",
            Save = false
        }
    )
    GameTab:AddToggle(
        {
            Name = "Anti-Screech",
            Default = false,
            Flag = "ScreechToggle",
            Save = false
        }
    )
    
    GameTab:AddToggle(
        {
            Name = "Auto-Heartbeat Minigame",
            Default = false,
            Flag = "HeartbeatWin",
            Save = false
        }
    )
    
    GameTab:AddToggle(
        {
            Name = "Event Notify",
            Default = false,
            Flag = "PredictToggle",
            Save = false
        }
    )
    GameTab:AddToggle(
        {
            Name = "Danger Notify",
            Default = false,
            Flag = "MobToggle",
            Save = false
        }
    )
    GameTab:AddButton(
        {
            Name = "Auto Complete Breaker Minigame[ERROR]",
            Callback = function()
                for jaj = 0, 972758196534981 do
                    wait(2.1)
                    game:GetService("ReplicatedStorage").Bricks.EBF:FireServer()
                end
            end
        }
    )
    
    GameTab:AddParagraph("Notice!", "DarkHub Supports only KRNL, Synapse X, Vega X and Furk Ultra")
    
    game:GetService("RunService").RenderStepped:Connect(
        function()
            pcall(
                function()
                    if game.Players.LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
                        game.Players.LocalPlayer.Character:TranslateBy(
                            game.Players.LocalPlayer.Character.Humanoid.MoveDirection * TargetWalkspeed / 50
                        )
                    end
                end
            )
        end
    )
    
    game:GetService("Workspace").CurrentRooms.DescendantAdded:Connect(
        function(descendant)
            if OrionLib.Flags["NoSeek"].Value == true and descendant.Name == ("Seek_Arm" or "ChandelierObstruction") then
                task.spawn(
                    function()
                        wait()
                        descendant:Destroy()
                    end
                )
            end
        end
    )
    game:GetService("Workspace").CurrentRooms.DescendantAdded:Connect(
        function(descendant)
            if OrionLib.Flags["NoLever"].Value == true and descendant.Name == ("ThingToOpen") then
                task.spawn(
                    function()
                        wait()
                        descendant:Destroy()
                    end
                )
            end
        end
    )
    
    if OrionLib.Flags["NoVentGates"].Value == true then
        for i, vent_sucks in pairs(game:GetService("Workspace"):GetDescendants()) do
            if vent_sucks.Name == "VentGrate" then
                vent_sucks:remove()
            end
        end
    end
    
    game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(
        function(prompt)
            if OrionLib.Flags["InstantToggle"].Value == true then
                fireproximityprompt(prompt)
            end
        end
    )
    
    local old
    old =
        hookmetamethod(
        game,
        "__namecall",
        newcclosure(
            function(self, ...)
                local args = {...}
                local method = getnamecallmethod()
    
                if tostring(self) == "Screech" and method == "FireServer" and OrionLib.Flags["ScreechToggle"].Value == true then
                    args[1] = true
                    return old(self, unpack(args))
                end
                if
                    tostring(self) == "ClutchHeartbeat" and method == "FireServer" and
                        OrionLib.Flags["HeartbeatWin"].Value == true
                 then
                    args[2] = true
                    return old(self, unpack(args))
                end
    
                return old(self, ...)
            end
        )
    )
    
    workspace.CurrentCamera.ChildAdded:Connect(
        function(child)
            if child.Name == "Screech" and OrionLib.Flags["ScreechToggle"].Value == true then
                child:Destroy()
            end
        end
    )
    
    local NotificationCoroutine =
        coroutine.create(
        function()
            LatestRoom.Changed:Connect(
                function()
                    if OrionLib.Flags["PredictToggle"].Value == true then
                        local n = ChaseStart.Value - LatestRoom.Value
                        if 0 < n and n < 4 then
                            OrionLib:MakeNotification(
                                {
                                    Name = "[EVENT_DETECTED]",
                                    Content = "{+} Event in " .. tostring(n) .. " rooms.",
                                    Time = 5
                                }
                            )
                        end
                    end
                    if OrionLib.Flags["BookToggle"].Value == true then
                        if LatestRoom.Value == 50 then
                            coroutine.resume(BookCoroutine)
                        end
                    end
                    if OrionLib.Flags["FigureToggle"].Value == true then
                        if LatestRoom.Value == 50 then
                            coroutine.resume(EntityCoroutine)
                        end
                    end
                end
            )
            workspace.ChildAdded:Connect(
                function(inst)
                    if inst.Name == "RushMoving" and OrionLib.Flags["MobToggle"].Value == true then
                        if OrionLib.Flags["AvoidRushToggle"].Value == true then
                            OrionLib:MakeNotification(
                                {
                                    Name = "[DANGER_AVOIDED]",
                                    Content = "{---} Avoiding Rush.",
                                    Time = 5
                                }
                            )
                            local OldPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                            local con =
                                game:GetService("RunService").Heartbeat:Connect(
                                function()
                                    game.Players.LocalPlayer.Character:MoveTo(OldPos + Vector3.new(0, 20, 0))
                                end
                            )
    
                            inst.Destroying:Wait()
                            con:Disconnect()
    
                            game.Players.LocalPlayer.Character:MoveTo(OldPos)
                        else
                            OrionLib:MakeNotification(
                                {
                                    Name = "[DANGER_DETECTED]",
                                    Content = "{+} Rush detected, hide.",
                                    Time = 5
                                }
                            )
                        end
                    elseif inst.Name == "AmbushMoving" and OrionLib.Flags["MobToggle"].Value == true then
                        if OrionLib.Flags["AvoidRushToggle"].Value == true then
                            OrionLib:MakeNotification(
                                {
                                    Name = "[DANGER_AVOIDED]",
                                    Content = "{---} Avoiding Ambush.",
                                    Time = 5
                                }
                            )
                            local OldPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                            local con =
                                game:GetService("RunService").Heartbeat:Connect(
                                function()
                                    game.Players.LocalPlayer.Character:MoveTo(OldPos + Vector3.new(0, 20, 0))
                                end
                            )
    
                            inst.Destroying:Wait()
                            con:Disconnect()
    
                            game.Players.LocalPlayer.Character:MoveTo(OldPos)
                        else
                            OrionLib:MakeNotification(
                                {
                                    Name = "[DANGER_DETECTED]",
                                    Content = "{+} Ambush detected, hide.",
                                    Time = 5
                                }
                            )
                        end
                    end
                end
            )
        end
    )
    
    local CreditsTab =
        Window:MakeTab(
        {
            Name = "Owner",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        }
    )
    
    CreditsTab:AddParagraph("Dark Hub", "By DarkZone#9999")
    
    coroutine.resume(NotificationCoroutine)
    
    OrionLib:Init()
    
    task.wait(2)
